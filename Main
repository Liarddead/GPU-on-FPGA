
`include "Line.v"

`include "Line_draw.v"

`include "RAM_pixel.v"

`include "Triangle_draw.v"

`include "hvsync_generator.v"

/*
A simple test pattern using the hvsync_generator module.
*/

module test_hvsync_top(clk, reset, hsync, vsync, rgb);

  input clk, reset;
  output hsync, vsync;
  output [2:0] rgb;
  wire display_on;
  wire [9:0] hpos;
  wire [9:0] vpos;

  hvsync_generator hvsync_gen(
    .clk(clk),
    .reset(0),
    .hsync(hsync),
    .vsync(vsync),
    .display_on(display_on),
    .hpos(hpos),
    .vpos(vpos)
  );
	
  reg [2:0] RGB;
  reg [9:0] x0,y0,x1,y1,x2,y2;
  reg in,in2,in3,in4;
  initial begin
    x0=100;
    y0=100;
    x1=200;
    y1=100;
    x2=250;
    y2=400;
    in=0;
    in2=0;
    in3=0;
    in4=0;
  end
  
  //Line_draw Line_draw_DDA(.clk(clk), .reset(0), .X0(x0),.Y0(y0),.X1(x1),.Y1(y1),.hpos(hpos),.vpos(vpos),.out(in)); 
  //Line_draw Line_draw_DDA2(.clk(clk), .reset(0), .X0(x0),.Y0(y0),.X1(x2),.Y1(y2),.hpos(hpos),.vpos(vpos),.out(in2)); 
  //Line_draw Line_draw_DDA3(.clk(clk), .reset(0), .X0(x1),.Y0(y1),.X1(x2),.Y1(y2),.hpos(hpos),.vpos(vpos),.out(in3));
  Triangle_draw Triangle_draw1(.clk(clk), .reset(0), .X0(x0),.Y0(y0),.X1(x1),.Y1(y1),.X2(x2),.Y2(y2),.hpos(hpos),.vpos(vpos),.out(in4));
always@(posedge clk)begin
  if((in||in2||in3||in4)) begin

      RGB <=3'b111;
     
     end
    else begin
      RGB <=0;
     
    end
    
 end 
   
assign rgb = RGB;

endmodule
